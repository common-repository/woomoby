// Switchery 0.8.2
(function(){function require(name){var module = require.modules[name]; if (!module)throw new Error('failed to require "' + name + '"'); if (!("exports"in module) && typeof module.definition === "function"){module.client = module.component = true; module.definition.call(this, module.exports = {}, module); delete module.definition}return module.exports}require.loader = "component"; require.helper = {}; require.helper.semVerSort = function(a, b){var aArray = a.version.split("."); var bArray = b.version.split("."); for (var i = 0; i < aArray.length; ++i){var aInt = parseInt(aArray[i], 10); var bInt = parseInt(bArray[i], 10); if (aInt === bInt){var aLex = aArray[i].substr(("" + aInt).length); var bLex = bArray[i].substr(("" + bInt).length); if (aLex === "" && bLex !== "")return 1; if (aLex !== "" && bLex === "")return - 1; if (aLex !== "" && bLex !== "")return aLex > bLex?1: - 1; continue} else if (aInt > bInt){return 1} else{return - 1}}return 0}; require.latest = function(name, returnPath){function showError(name){throw new Error('failed to find latest module of "' + name + '"')}var versionRegexp = /(.*)~(.*)@v?(\d+\.\d+\.\d+[^\/]*)$/; var remoteRegexp = /(.*)~(.*)/; if (!remoteRegexp.test(name))showError(name); var moduleNames = Object.keys(require.modules); var semVerCandidates = []; var otherCandidates = []; for (var i = 0; i < moduleNames.length; i++){var moduleName = moduleNames[i]; if (new RegExp(name + "@").test(moduleName)){var version = moduleName.substr(name.length + 1); var semVerMatch = versionRegexp.exec(moduleName); if (semVerMatch != null){semVerCandidates.push({version:version, name:moduleName})} else{otherCandidates.push({version:version, name:moduleName})}}}if (semVerCandidates.concat(otherCandidates).length === 0){showError(name)}if (semVerCandidates.length > 0){var module = semVerCandidates.sort(require.helper.semVerSort).pop().name; if (returnPath === true){return module}return require(module)}var module = otherCandidates.sort(function(a, b){return a.name > b.name})[0].name; if (returnPath === true){return module}return require(module)}; require.modules = {}; require.register = function(name, definition){require.modules[name] = {definition:definition}}; require.define = function(name, exports){require.modules[name] = {exports:exports}}; require.register("abpetkov~transitionize@0.0.3", function(exports, module){module.exports = Transitionize; function Transitionize(element, props){if (!(this instanceof Transitionize))return new Transitionize(element, props); this.element = element; this.props = props || {}; this.init()}Transitionize.prototype.isSafari = function(){return/Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)}; Transitionize.prototype.init = function(){var transitions = []; for (var key in this.props){transitions.push(key + " " + this.props[key])}this.element.style.transition = transitions.join(", "); if (this.isSafari())this.element.style.webkitTransition = transitions.join(", ")}}); require.register("ftlabs~fastclick@v0.6.11", function(exports, module){function FastClick(layer){"use strict"; var oldOnClick, self = this; this.trackingClick = false; this.trackingClickStart = 0; this.targetElement = null; this.touchStartX = 0; this.touchStartY = 0; this.lastTouchIdentifier = 0; this.touchBoundary = 10; this.layer = layer; if (!layer || !layer.nodeType){throw new TypeError("Layer must be a document node")}this.onClick = function(){return FastClick.prototype.onClick.apply(self, arguments)}; this.onMouse = function(){return FastClick.prototype.onMouse.apply(self, arguments)}; this.onTouchStart = function(){return FastClick.prototype.onTouchStart.apply(self, arguments)}; this.onTouchMove = function(){return FastClick.prototype.onTouchMove.apply(self, arguments)}; this.onTouchEnd = function(){return FastClick.prototype.onTouchEnd.apply(self, arguments)}; this.onTouchCancel = function(){return FastClick.prototype.onTouchCancel.apply(self, arguments)}; if (FastClick.notNeeded(layer)){return}if (this.deviceIsAndroid){layer.addEventListener("mouseover", this.onMouse, true); layer.addEventListener("mousedown", this.onMouse, true); layer.addEventListener("mouseup", this.onMouse, true)}layer.addEventListener("click", this.onClick, true); layer.addEventListener("touchstart", this.onTouchStart, false); layer.addEventListener("touchmove", this.onTouchMove, false); layer.addEventListener("touchend", this.onTouchEnd, false); layer.addEventListener("touchcancel", this.onTouchCancel, false); if (!Event.prototype.stopImmediatePropagation){layer.removeEventListener = function(type, callback, capture){var rmv = Node.prototype.removeEventListener; if (type === "click"){rmv.call(layer, type, callback.hijacked || callback, capture)} else{rmv.call(layer, type, callback, capture)}}; layer.addEventListener = function(type, callback, capture){var adv = Node.prototype.addEventListener; if (type === "click"){adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event){if (!event.propagationStopped){callback(event)}}), capture)} else{adv.call(layer, type, callback, capture)}}}if (typeof layer.onclick === "function"){oldOnClick = layer.onclick; layer.addEventListener("click", function(event){oldOnClick(event)}, false); layer.onclick = null}}FastClick.prototype.deviceIsAndroid = navigator.userAgent.indexOf("Android") > 0; FastClick.prototype.deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent); FastClick.prototype.deviceIsIOS4 = FastClick.prototype.deviceIsIOS && /OS 4_\d(_\d)?/.test(navigator.userAgent); FastClick.prototype.deviceIsIOSWithBadTarget = FastClick.prototype.deviceIsIOS && /OS ([6-9]|\d{2})_\d/.test(navigator.userAgent); FastClick.prototype.needsClick = function(target){"use strict"; switch (target.nodeName.toLowerCase()){case"button":case"select":case"textarea":if (target.disabled){return true}break; case"input":if (this.deviceIsIOS && target.type === "file" || target.disabled){return true}break; case"label":case"video":return true}return/\bneedsclick\b/.test(target.className)}; FastClick.prototype.needsFocus = function(target){"use strict"; switch (target.nodeName.toLowerCase()){case"textarea":return true; case"select":return!this.deviceIsAndroid; case"input":switch (target.type){case"button":case"checkbox":case"file":case"image":case"radio":case"submit":return false}return!target.disabled && !target.readOnly; default:return/\bneedsfocus\b/.test(target.className)}}; FastClick.prototype.sendClick = function(targetElement, event){"use strict"; var clickEvent, touch; if (document.activeElement && document.activeElement !== targetElement){document.activeElement.blur()}touch = event.changedTouches[0]; clickEvent = document.createEvent("MouseEvents"); clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null); clickEvent.forwardedTouchEvent = true; targetElement.dispatchEvent(clickEvent)}; FastClick.prototype.determineEventType = function(targetElement){"use strict"; if (this.deviceIsAndroid && targetElement.tagName.toLowerCase() === "select"){return"mousedown"}return"click"}; FastClick.prototype.focus = function(targetElement){"use strict"; var length; if (this.deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf("date") !== 0 && targetElement.type !== "time"){length = targetElement.value.length; targetElement.setSelectionRange(length, length)} else{targetElement.focus()}}; FastClick.prototype.updateScrollParent = function(targetElement){"use strict"; var scrollParent, parentElement; scrollParent = targetElement.fastClickScrollParent; if (!scrollParent || !scrollParent.contains(targetElement)){parentElement = targetElement; do{if (parentElement.scrollHeight > parentElement.offsetHeight){scrollParent = parentElement; targetElement.fastClickScrollParent = parentElement; break}parentElement = parentElement.parentElement}while (parentElement)}if (scrollParent){scrollParent.fastClickLastScrollTop = scrollParent.scrollTop}}; FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget){"use strict"; if (eventTarget.nodeType === Node.TEXT_NODE){return eventTarget.parentNode}return eventTarget}; FastClick.prototype.onTouchStart = function(event){"use strict"; var targetElement, touch, selection; if (event.targetTouches.length > 1){return true}targetElement = this.getTargetElementFromEventTarget(event.target); touch = event.targetTouches[0]; if (this.deviceIsIOS){selection = window.getSelection(); if (selection.rangeCount && !selection.isCollapsed){return true}if (!this.deviceIsIOS4){if (touch.identifier === this.lastTouchIdentifier){event.preventDefault(); return false}this.lastTouchIdentifier = touch.identifier; this.updateScrollParent(targetElement)}}this.trackingClick = true; this.trackingClickStart = event.timeStamp; this.targetElement = targetElement; this.touchStartX = touch.pageX; this.touchStartY = touch.pageY; if (event.timeStamp - this.lastClickTime < 200){event.preventDefault()}return true}; FastClick.prototype.touchHasMoved = function(event){"use strict"; var touch = event.changedTouches[0], boundary = this.touchBoundary; if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary){return true}return false}; FastClick.prototype.onTouchMove = function(event){"use strict"; if (!this.trackingClick){return true}if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)){this.trackingClick = false; this.targetElement = null}return true}; FastClick.prototype.findControl = function(labelElement){"use strict"; if (labelElement.control !== undefined){return labelElement.control}if (labelElement.htmlFor){return document.getElementById(labelElement.htmlFor)}return labelElement.querySelector("button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea")}; FastClick.prototype.onTouchEnd = function(event){"use strict"; var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement; if (!this.trackingClick){return true}if (event.timeStamp - this.lastClickTime < 200){this.cancelNextClick = true; return true}this.cancelNextClick = false; this.lastClickTime = event.timeStamp; trackingClickStart = this.trackingClickStart; this.trackingClick = false; this.trackingClickStart = 0; if (this.deviceIsIOSWithBadTarget){touch = event.changedTouches[0]; targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement; targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent}targetTagName = targetElement.tagName.toLowerCase(); if (targetTagName === "label"){forElement = this.findControl(targetElement); if (forElement){this.focus(targetElement); if (this.deviceIsAndroid){return false}targetElement = forElement}} else if (this.needsFocus(targetElement)){if (event.timeStamp - trackingClickStart > 100 || this.deviceIsIOS && window.top !== window && targetTagName === "input"){this.targetElement = null; return false}this.focus(targetElement); if (!this.deviceIsIOS4 || targetTagName !== "select"){this.targetElement = null; event.preventDefault()}return false}if (this.deviceIsIOS && !this.deviceIsIOS4){scrollParent = targetElement.fastClickScrollParent; if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop){return true}}if (!this.needsClick(targetElement)){event.preventDefault(); this.sendClick(targetElement, event)}return false}; FastClick.prototype.onTouchCancel = function(){"use strict"; this.trackingClick = false; this.targetElement = null}; FastClick.prototype.onMouse = function(event){"use strict"; if (!this.targetElement){return true}if (event.forwardedTouchEvent){return true}if (!event.cancelable){return true}if (!this.needsClick(this.targetElement) || this.cancelNextClick){if (event.stopImmediatePropagation){event.stopImmediatePropagation()} else{event.propagationStopped = true}event.stopPropagation(); event.preventDefault(); return false}return true}; FastClick.prototype.onClick = function(event){"use strict"; var permitted; if (this.trackingClick){this.targetElement = null; this.trackingClick = false; return true}if (event.target.type === "submit" && event.detail === 0){return true}permitted = this.onMouse(event); if (!permitted){this.targetElement = null}return permitted}; FastClick.prototype.destroy = function(){"use strict"; var layer = this.layer; if (this.deviceIsAndroid){layer.removeEventListener("mouseover", this.onMouse, true); layer.removeEventListener("mousedown", this.onMouse, true); layer.removeEventListener("mouseup", this.onMouse, true)}layer.removeEventListener("click", this.onClick, true); layer.removeEventListener("touchstart", this.onTouchStart, false); layer.removeEventListener("touchmove", this.onTouchMove, false); layer.removeEventListener("touchend", this.onTouchEnd, false); layer.removeEventListener("touchcancel", this.onTouchCancel, false)}; FastClick.notNeeded = function(layer){"use strict"; var metaViewport; var chromeVersion; if (typeof window.ontouchstart === "undefined"){return true}chromeVersion = + (/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [, 0])[1]; if (chromeVersion){if (FastClick.prototype.deviceIsAndroid){metaViewport = document.querySelector("meta[name=viewport]"); if (metaViewport){if (metaViewport.content.indexOf("user-scalable=no") !== - 1){return true}if (chromeVersion > 31 && window.innerWidth <= window.screen.width){return true}}} else{return true}}if (layer.style.msTouchAction === "none"){return true}return false}; FastClick.attach = function(layer){"use strict"; return new FastClick(layer)}; if (typeof define !== "undefined" && define.amd){define(function(){"use strict"; return FastClick})} else if (typeof module !== "undefined" && module.exports){module.exports = FastClick.attach; module.exports.FastClick = FastClick} else{window.FastClick = FastClick}}); require.register("component~indexof@0.0.3", function(exports, module){module.exports = function(arr, obj){if (arr.indexOf)return arr.indexOf(obj); for (var i = 0; i < arr.length; ++i){if (arr[i] === obj)return i}return - 1}}); require.register("component~classes@1.2.1", function(exports, module){var index = require("component~indexof@0.0.3"); var re = /\s+/; var toString = Object.prototype.toString; module.exports = function(el){return new ClassList(el)}; function ClassList(el){if (!el)throw new Error("A DOM element reference is required"); this.el = el; this.list = el.classList}ClassList.prototype.add = function(name){if (this.list){this.list.add(name); return this}var arr = this.array(); var i = index(arr, name); if (!~i)arr.push(name); this.el.className = arr.join(" "); return this}; ClassList.prototype.remove = function(name){if ("[object RegExp]" == toString.call(name)){return this.removeMatching(name)}if (this.list){this.list.remove(name); return this}var arr = this.array(); var i = index(arr, name); if (~i)arr.splice(i, 1); this.el.className = arr.join(" "); return this}; ClassList.prototype.removeMatching = function(re){var arr = this.array(); for (var i = 0; i < arr.length; i++){if (re.test(arr[i])){this.remove(arr[i])}}return this}; ClassList.prototype.toggle = function(name, force){if (this.list){if ("undefined" !== typeof force){if (force !== this.list.toggle(name, force)){this.list.toggle(name)}} else{this.list.toggle(name)}return this}if ("undefined" !== typeof force){if (!force){this.remove(name)} else{this.add(name)}} else{if (this.has(name)){this.remove(name)} else{this.add(name)}}return this}; ClassList.prototype.array = function(){var str = this.el.className.replace(/^\s+|\s+$/g, ""); var arr = str.split(re); if ("" === arr[0])arr.shift(); return arr}; ClassList.prototype.has = ClassList.prototype.contains = function(name){return this.list?this.list.contains(name):!!~index(this.array(), name)}}); require.register("component~event@0.1.4", function(exports, module){var bind = window.addEventListener?"addEventListener":"attachEvent", unbind = window.removeEventListener?"removeEventListener":"detachEvent", prefix = bind !== "addEventListener"?"on":""; exports.bind = function(el, type, fn, capture){el[bind](prefix + type, fn, capture || false); return fn}; exports.unbind = function(el, type, fn, capture){el[unbind](prefix + type, fn, capture || false); return fn}}); require.register("component~query@0.0.3", function(exports, module){function one(selector, el){return el.querySelector(selector)}exports = module.exports = function(selector, el){el = el || document; return one(selector, el)}; exports.all = function(selector, el){el = el || document; return el.querySelectorAll(selector)}; exports.engine = function(obj){if (!obj.one)throw new Error(".one callback required"); if (!obj.all)throw new Error(".all callback required"); one = obj.one; exports.all = obj.all; return exports}}); require.register("component~matches-selector@0.1.5", function(exports, module){var query = require("component~query@0.0.3"); var proto = Element.prototype; var vendor = proto.matches || proto.webkitMatchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector; module.exports = match; function match(el, selector){if (!el || el.nodeType !== 1)return false; if (vendor)return vendor.call(el, selector); var nodes = query.all(selector, el.parentNode); for (var i = 0; i < nodes.length; ++i){if (nodes[i] == el)return true}return false}}); require.register("component~closest@0.1.4", function(exports, module){var matches = require("component~matches-selector@0.1.5"); module.exports = function(element, selector, checkYoSelf, root){element = checkYoSelf?{parentNode:element}:element; root = root || document; while ((element = element.parentNode) && element !== document){if (matches(element, selector))return element; if (element === root)return}}}); require.register("component~delegate@0.2.3", function(exports, module){var closest = require("component~closest@0.1.4"), event = require("component~event@0.1.4"); exports.bind = function(el, selector, type, fn, capture){return event.bind(el, type, function(e){var target = e.target || e.srcElement; e.delegateTarget = closest(target, selector, true, el); if (e.delegateTarget)fn.call(el, e)}, capture)}; exports.unbind = function(el, type, fn, capture){event.unbind(el, type, fn, capture)}}); require.register("component~events@1.0.9", function(exports, module){var events = require("component~event@0.1.4"); var delegate = require("component~delegate@0.2.3"); module.exports = Events; function Events(el, obj){if (!(this instanceof Events))return new Events(el, obj); if (!el)throw new Error("element required"); if (!obj)throw new Error("object required"); this.el = el; this.obj = obj; this._events = {}}Events.prototype.sub = function(event, method, cb){this._events[event] = this._events[event] || {}; this._events[event][method] = cb}; Events.prototype.bind = function(event, method){var e = parse(event); var el = this.el; var obj = this.obj; var name = e.name; var method = method || "on" + name; var args = [].slice.call(arguments, 2); function cb(){var a = [].slice.call(arguments).concat(args); obj[method].apply(obj, a)}if (e.selector){cb = delegate.bind(el, e.selector, name, cb)} else{events.bind(el, name, cb)}this.sub(name, method, cb); return cb}; Events.prototype.unbind = function(event, method){if (0 == arguments.length)return this.unbindAll(); if (1 == arguments.length)return this.unbindAllOf(event); var bindings = this._events[event]; if (!bindings)return; var cb = bindings[method]; if (!cb)return; events.unbind(this.el, event, cb)}; Events.prototype.unbindAll = function(){for (var event in this._events){this.unbindAllOf(event)}}; Events.prototype.unbindAllOf = function(event){var bindings = this._events[event]; if (!bindings)return; for (var method in bindings){this.unbind(event, method)}}; function parse(event){var parts = event.split(/ +/); return{name:parts.shift(), selector:parts.join(" ")}}}); require.register("switchery", function(exports, module){var transitionize = require("abpetkov~transitionize@0.0.3"), fastclick = require("ftlabs~fastclick@v0.6.11"), classes = require("component~classes@1.2.1"), events = require("component~events@1.0.9"); module.exports = Switchery; var defaults = {color:"#64bd63", secondaryColor:"#dfdfdf", jackColor:"#fff", jackSecondaryColor:null, className:"switchery", disabled:false, disabledOpacity:.5, speed:"0.4s", size:"default"}; function Switchery(element, options){if (!(this instanceof Switchery))return new Switchery(element, options); this.element = element; this.options = options || {}; for (var i in defaults){if (this.options[i] == null){this.options[i] = defaults[i]}}if (this.element != null && this.element.type == "checkbox")this.init(); if (this.isDisabled() === true)this.disable()}Switchery.prototype.hide = function(){this.element.style.display = "none"}; Switchery.prototype.show = function(){var switcher = this.create(); this.insertAfter(this.element, switcher)}; Switchery.prototype.create = function(){this.switcher = document.createElement("span"); this.jack = document.createElement("small"); this.switcher.appendChild(this.jack); this.switcher.className = this.options.className; this.events = events(this.switcher, this); return this.switcher}; Switchery.prototype.insertAfter = function(reference, target){reference.parentNode.insertBefore(target, reference.nextSibling)}; Switchery.prototype.setPosition = function(clicked){var checked = this.isChecked(), switcher = this.switcher, jack = this.jack; if (clicked && checked)checked = false; else if (clicked && !checked)checked = true; if (checked === true){this.element.checked = true; if (window.getComputedStyle)jack.style.left = parseInt(window.getComputedStyle(switcher).width) - parseInt(window.getComputedStyle(jack).width) + "px"; else jack.style.left = parseInt(switcher.currentStyle["width"]) - parseInt(jack.currentStyle["width"]) + "px"; if (this.options.color)this.colorize(); this.setSpeed()} else{jack.style.left = 0; this.element.checked = false; this.switcher.style.boxShadow = "inset 0 0 0 0 " + this.options.secondaryColor; this.switcher.style.borderColor = this.options.secondaryColor; this.switcher.style.backgroundColor = this.options.secondaryColor !== defaults.secondaryColor?this.options.secondaryColor:"#fff"; this.jack.style.backgroundColor = this.options.jackSecondaryColor !== this.options.jackColor?this.options.jackSecondaryColor:this.options.jackColor; this.setSpeed()}}; Switchery.prototype.setSpeed = function(){var switcherProp = {}, jackProp = {"background-color":this.options.speed, left:this.options.speed.replace(/[a-z]/, "") / 2 + "s"}; if (this.isChecked()){switcherProp = {border:this.options.speed, "box-shadow":this.options.speed, "background-color":this.options.speed.replace(/[a-z]/, "") * 3 + "s"}} else{switcherProp = {border:this.options.speed, "box-shadow":this.options.speed}}transitionize(this.switcher, switcherProp); transitionize(this.jack, jackProp)}; Switchery.prototype.setSize = function(){var small = "switchery-small", normal = "switchery-default", large = "switchery-large"; switch (this.options.size){case"small":classes(this.switcher).add(small); break; case"large":classes(this.switcher).add(large); break; default:classes(this.switcher).add(normal); break}}; Switchery.prototype.colorize = function(){var switcherHeight = this.switcher.offsetHeight / 2; this.switcher.style.backgroundColor = this.options.color; this.switcher.style.borderColor = this.options.color; this.switcher.style.boxShadow = "inset 0 0 0 " + switcherHeight + "px " + this.options.color; this.jack.style.backgroundColor = this.options.jackColor}; Switchery.prototype.handleOnchange = function(state){if (document.dispatchEvent){var event = document.createEvent("HTMLEvents"); event.initEvent("change", true, true); this.element.dispatchEvent(event)} else{this.element.fireEvent("onchange")}}; Switchery.prototype.handleChange = function(){var self = this, el = this.element; if (el.addEventListener){el.addEventListener("change", function(){self.setPosition()})} else{el.attachEvent("onchange", function(){self.setPosition()})}}; Switchery.prototype.handleClick = function(){var switcher = this.switcher; fastclick(switcher); this.events.bind("click", "bindClick")}; Switchery.prototype.bindClick = function(){var parent = this.element.parentNode.tagName.toLowerCase(), labelParent = parent === "label"?false:true; this.setPosition(labelParent); this.handleOnchange(this.element.checked)}; Switchery.prototype.markAsSwitched = function(){this.element.setAttribute("data-switchery", true)}; Switchery.prototype.markedAsSwitched = function(){return this.element.getAttribute("data-switchery")}; Switchery.prototype.init = function(){this.hide(); this.show(); this.setSize(); this.setPosition(); this.markAsSwitched(); this.handleChange(); this.handleClick()}; Switchery.prototype.isChecked = function(){return this.element.checked}; Switchery.prototype.isDisabled = function(){return this.options.disabled || this.element.disabled || this.element.readOnly}; Switchery.prototype.destroy = function(){this.events.unbind()}; Switchery.prototype.enable = function(){if (!this.options.disabled)return; if (this.options.disabled)this.options.disabled = false; if (this.element.disabled)this.element.disabled = false; if (this.element.readOnly)this.element.readOnly = false; this.switcher.style.opacity = 1; this.events.bind("click", "bindClick")}; Switchery.prototype.disable = function(){if (this.options.disabled)return; if (!this.options.disabled)this.options.disabled = true; if (!this.element.disabled)this.element.disabled = true; if (!this.element.readOnly)this.element.readOnly = true; this.switcher.style.opacity = this.options.disabledOpacity; this.destroy()}}); if (typeof exports == "object"){module.exports = require("switchery")} else if (typeof define == "function" && define.amd){define("Switchery", [], function(){return require("switchery")})} else{(this || window)["Switchery"] = require("switchery")}})();
// Spin
!function(a, b){"object" == typeof exports?module.exports = b():"function" == typeof define && define.amd?define(b):a.Spinner = b()}(this, function(){"use strict"; function a(a, b){var c, d = document.createElement(a || "div"); for (c in b)d[c] = b[c]; return d}function b(a){for (var b = 1, c = arguments.length; c > b; b++)a.appendChild(arguments[b]); return a}function c(a, b, c, d){var e = ["opacity", b, ~~(100 * a), c, d].join("-"), f = .01 + c / d * 100, g = Math.max(1 - (1 - a) / b * (100 - f), a), h = j.substring(0, j.indexOf("Animation")).toLowerCase(), i = h && "-" + h + "-" || ""; return l[e] || (m.insertRule("@" + i + "keyframes " + e + "{0%{opacity:" + g + "}" + f + "%{opacity:" + a + "}" + (f + .01) + "%{opacity:1}" + (f + b) % 100 + "%{opacity:" + a + "}100%{opacity:" + g + "}}", m.cssRules.length), l[e] = 1), e}function d(a, b){var c, d, e = a.style; for (b = b.charAt(0).toUpperCase() + b.slice(1), d = 0; d < k.length; d++)if (c = k[d] + b, void 0 !== e[c])return c; return void 0 !== e[b]?b:void 0}function e(a, b){for (var c in b)a.style[d(a, c) || c] = b[c]; return a}function f(a){for (var b = 1; b < arguments.length; b++){var c = arguments[b]; for (var d in c)void 0 === a[d] && (a[d] = c[d])}return a}function g(a, b){return"string" == typeof a?a:a[b % a.length]}function h(a){this.opts = f(a || {}, h.defaults, n)}function i(){function c(b, c){return a("<" + b + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', c)}m.addRule(".spin-vml", "behavior:url(#default#VML)"), h.prototype.lines = function(a, d){function f(){return e(c("group", {coordsize:k + " " + k, coordorigin: - j + " " + - j}), {width:k, height:k})}function h(a, h, i){b(m, b(e(f(), {rotation:360 / d.lines * a + "deg", left:~~h}), b(e(c("roundrect", {arcsize:d.corners}), {width:j, height:d.width, left:d.radius, top: - d.width >> 1, filter:i}), c("fill", {color:g(d.color, a), opacity:d.opacity}), c("stroke", {opacity:0}))))}var i, j = d.length + d.width, k = 2 * j, l = 2 * - (d.width + d.length) + "px", m = e(f(), {position:"absolute", top:l, left:l}); if (d.shadow)for (i = 1; i <= d.lines; i++)h(i, - 2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)"); for (i = 1; i <= d.lines; i++)h(i); return b(a, m)}, h.prototype.opacity = function(a, b, c, d){var e = a.firstChild; d = d.shadow && d.lines || 0, e && b + d < e.childNodes.length && (e = e.childNodes[b + d], e = e && e.firstChild, e = e && e.firstChild, e && (e.opacity = c))}}var j, k = ["webkit", "Moz", "ms", "O"], l = {}, m = function(){var c = a("style", {type:"text/css"}); return b(document.getElementsByTagName("head")[0], c), c.sheet || c.styleSheet}(), n = {lines:12, length:7, width:5, radius:10, rotate:0, corners:1, color:"#000", direction:1, speed:1, trail:100, opacity:.25, fps:20, zIndex:2e9, className:"spinner", top:"50%", left:"50%", position:"absolute"}; h.defaults = {}, f(h.prototype, {spin:function(b){this.stop(); var c = this, d = c.opts, f = c.el = e(a(0, {className:d.className}), {position:d.position, width:0, zIndex:d.zIndex}); d.radius + d.length + d.width; if (e(f, {left:d.left, top:d.top}), b && b.insertBefore(f, b.firstChild || null), f.setAttribute("role", "progressbar"), c.lines(f, c.opts), !j){var g, h = 0, i = (d.lines - 1) * (1 - d.direction) / 2, k = d.fps, l = k / d.speed, m = (1 - d.opacity) / (l * d.trail / 100), n = l / d.lines; !function o(){h++; for (var a = 0; a < d.lines; a++)g = Math.max(1 - (h + (d.lines - a) * n) % l * m, d.opacity), c.opacity(f, a * d.direction + i, g, d); c.timeout = c.el && setTimeout(o, ~~(1e3 / k))}()}return c}, stop:function(){var a = this.el; return a && (clearTimeout(this.timeout), a.parentNode && a.parentNode.removeChild(a), this.el = void 0), this}, lines:function(d, f){function h(b, c){return e(a(), {position:"absolute", width:f.length + f.width + "px", height:f.width + "px", background:b, boxShadow:c, transformOrigin:"left", transform:"rotate(" + ~~(360 / f.lines * k + f.rotate) + "deg) translate(" + f.radius + "px,0)", borderRadius:(f.corners * f.width >> 1) + "px"})}for (var i, k = 0, l = (f.lines - 1) * (1 - f.direction) / 2; k < f.lines; k++)i = e(a(), {position:"absolute", top:1 + ~(f.width / 2) + "px", transform:f.hwaccel?"translate3d(0,0,0)":"", opacity:f.opacity, animation:j && c(f.opacity, f.trail, l + k * f.direction, f.lines) + " " + 1 / f.speed + "s linear infinite"}), f.shadow && b(i, e(h("#000", "0 0 4px #000"), {top:"2px"})), b(d, b(i, h(g(f.color, k), "0 0 1px rgba(0,0,0,.1)"))); return d}, opacity:function(a, b, c){b < a.childNodes.length && (a.childNodes[b].style.opacity = c)}}); var o = e(a("group"), {behavior:"url(#default#VML)"}); return!d(o, "transform") && o.adj?i():j = d(o, "animation"), h});
// Ladda 1.0.0
!function(a, b){"object" == typeof exports?module.exports = b(require("spin.js")):"function" == typeof define && define.amd?define(["spin"], b):a.Ladda = b(a.Spinner)}(this, function(a){"use strict"; function b(a){if ("undefined" == typeof a)return void console.warn("Ladda button target must be defined."); if (/ladda-button/i.test(a.className) || (a.className += " ladda-button"), a.hasAttribute("data-style") || a.setAttribute("data-style", "expand-right"), !a.querySelector(".ladda-label")){var b = document.createElement("span"); b.className = "ladda-label", i(a, b)}var c, d = a.querySelector(".ladda-spinner"); d || (d = document.createElement("span"), d.className = "ladda-spinner"), a.appendChild(d); var e, f = {start:function(){return c || (c = g(a)), a.setAttribute("disabled", ""), a.setAttribute("data-loading", ""), clearTimeout(e), c.spin(d), this.setProgress(0), this}, startAfter:function(a){return clearTimeout(e), e = setTimeout(function(){f.start()}, a), this}, stop:function(){return a.removeAttribute("disabled"), a.removeAttribute("data-loading"), clearTimeout(e), c && (e = setTimeout(function(){c.stop()}, 1e3)), this}, toggle:function(){return this.isLoading()?this.stop():this.start(), this}, setProgress:function(b){b = Math.max(Math.min(b, 1), 0); var c = a.querySelector(".ladda-progress"); 0 === b && c && c.parentNode?c.parentNode.removeChild(c):(c || (c = document.createElement("div"), c.className = "ladda-progress", a.appendChild(c)), c.style.width = (b || 0) * a.offsetWidth + "px")}, enable:function(){return this.stop(), this}, disable:function(){return this.stop(), a.setAttribute("disabled", ""), this}, isLoading:function(){return a.hasAttribute("data-loading")}, remove:function(){clearTimeout(e), a.removeAttribute("disabled", ""), a.removeAttribute("data-loading", ""), c && (c.stop(), c = null); for (var b = 0, d = j.length; d > b; b++)if (f === j[b]){j.splice(b, 1); break}}}; return j.push(f), f}function c(a, b){for (; a.parentNode && a.tagName !== b; )a = a.parentNode; return b === a.tagName?a:void 0}function d(a){for (var b = ["input", "textarea", "select"], c = [], d = 0; d < b.length; d++)for (var e = a.getElementsByTagName(b[d]), f = 0; f < e.length; f++)e[f].hasAttribute("required") && c.push(e[f]); return c}function e(a, e){e = e || {}; var f = []; "string" == typeof a?f = h(document.querySelectorAll(a)):"object" == typeof a && "string" == typeof a.nodeName && (f = [a]); for (var g = 0, i = f.length; i > g; g++)!function(){var a = f[g]; if ("function" == typeof a.addEventListener){var h = b(a), i = - 1; a.addEventListener("click", function(b){var f = !0, g = c(a, "FORM"); if ("undefined" != typeof g)if ("function" == typeof g.checkValidity)f = g.checkValidity(); else for (var j = d(g), k = 0; k < j.length; k++)"" === j[k].value.replace(/^\s+|\s+$/g, "") && (f = !1), "checkbox" !== j[k].type && "radio" !== j[k].type || j[k].checked || (f = !1), "email" === j[k].type && (f = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/.test(j[k].value)); f && (h.startAfter(1), "number" == typeof e.timeout && (clearTimeout(i), i = setTimeout(h.stop, e.timeout)), "function" == typeof e.callback && e.callback.apply(null, [h]))}, !1)}}()}function f(){for (var a = 0, b = j.length; b > a; a++)j[a].stop()}function g(b){var c, d, e = b.offsetHeight; 0 === e && (e = parseFloat(window.getComputedStyle(b).height)), e > 32 && (e *= .8), b.hasAttribute("data-spinner-size") && (e = parseInt(b.getAttribute("data-spinner-size"), 10)), b.hasAttribute("data-spinner-color") && (c = b.getAttribute("data-spinner-color")), b.hasAttribute("data-spinner-lines") && (d = parseInt(b.getAttribute("data-spinner-lines"), 10)); var f = .2 * e, g = .6 * f, h = 7 > f?2:3; return new a({color:c || "#fff", lines:d || 12, radius:f, length:g, width:h, zIndex:"auto", top:"auto", left:"auto", className:""})}function h(a){for (var b = [], c = 0; c < a.length; c++)b.push(a[c]); return b}function i(a, b){var c = document.createRange(); c.selectNodeContents(a), c.surroundContents(b), a.appendChild(b)}var j = []; return{bind:e, create:b, stopAll:f}});
// Spectrum Colorpicker v1.8.0
(function(factory){"use strict"; if (typeof define === "function" && define.amd){define(["jquery"], factory)} else if (typeof exports == "object" && typeof module == "object"){module.exports = factory(require("jquery"))} else{factory(jQuery)}})(function($, undefined){"use strict"; var defaultOpts = {beforeShow:noop, move:noop, change:noop, show:noop, hide:noop, color:false, flat:false, showInput:false, allowEmpty:false, showButtons:true, clickoutFiresChange:true, showInitial:false, showPalette:false, showPaletteOnly:false, hideAfterPaletteSelect:false, togglePaletteOnly:false, showSelectionPalette:true, localStorageKey:false, appendTo:"body", maxSelectionSize:7, cancelText:"cancel", chooseText:"choose", togglePaletteMoreText:"more", togglePaletteLessText:"less", clearText:"Clear Color Selection", noColorSelectedText:"No Color Selected", preferredFormat:false, className:"", containerClassName:"", replacerClassName:"", showAlpha:false, theme:"sp-light", palette:[["#ffffff", "#000000", "#ff0000", "#ff8000", "#ffff00", "#008000", "#0000ff", "#4b0082", "#9400d3"]], selectionPalette:[], disabled:false, offset:null}, spectrums = [], IE = !!/msie/i.exec(window.navigator.userAgent), rgbaSupport = function(){function contains(str, substr){return!!~("" + str).indexOf(substr)}var elem = document.createElement("div"); var style = elem.style; style.cssText = "background-color:rgba(0,0,0,.5)"; return contains(style.backgroundColor, "rgba") || contains(style.backgroundColor, "hsla")}(), replaceInput = ["<div class='sp-replacer'>", "<div class='sp-preview'><div class='sp-preview-inner'></div></div>", "<div class='sp-dd'>&#9660;</div>", "</div>"].join(""), markup = function(){var gradientFix = ""; if (IE){for (var i = 1; i <= 6; i++){gradientFix += "<div class='sp-" + i + "'></div>"}}return["<div class='sp-container sp-hidden'>", "<div class='sp-palette-container'>", "<div class='sp-palette sp-thumb sp-cf'></div>", "<div class='sp-palette-button-container sp-cf'>", "<button type='button' class='sp-palette-toggle'></button>", "</div>", "</div>", "<div class='sp-picker-container'>", "<div class='sp-top sp-cf'>", "<div class='sp-fill'></div>", "<div class='sp-top-inner'>", "<div class='sp-color'>", "<div class='sp-sat'>", "<div class='sp-val'>", "<div class='sp-dragger'></div>", "</div>", "</div>", "</div>", "<div class='sp-clear sp-clear-display'>", "</div>", "<div class='sp-hue'>", "<div class='sp-slider'></div>", gradientFix, "</div>", "</div>", "<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>", "</div>", "<div class='sp-input-container sp-cf'>", "<input class='sp-input' type='text' spellcheck='false'  />", "</div>", "<div class='sp-initial sp-thumb sp-cf'></div>", "<div class='sp-button-container sp-cf'>", "<a class='sp-cancel' href='#'></a>", "<button type='button' class='sp-choose'></button>", "</div>", "</div>", "</div>"].join("")}(); function paletteTemplate(p, color, className, opts){var html = []; for (var i = 0; i < p.length; i++){var current = p[i]; if (current){var tiny = tinycolor(current); var c = tiny.toHsl().l < .5?"sp-thumb-el sp-thumb-dark":"sp-thumb-el sp-thumb-light"; c += tinycolor.equals(color, current)?" sp-thumb-active":""; var formattedString = tiny.toString(opts.preferredFormat || "rgb"); var swatchStyle = rgbaSupport?"background-color:" + tiny.toRgbString():"filter:" + tiny.toFilter(); html.push('<span title="' + formattedString + '" data-color="' + tiny.toRgbString() + '" class="' + c + '"><span class="sp-thumb-inner" style="' + swatchStyle + ';" /></span>')} else{var cls = "sp-clear-display"; html.push($("<div />").append($('<span data-color="" style="background-color:transparent;" class="' + cls + '"></span>').attr("title", opts.noColorSelectedText)).html())}}return"<div class='sp-cf " + className + "'>" + html.join("") + "</div>"}function hideAll(){for (var i = 0; i < spectrums.length; i++){if (spectrums[i]){spectrums[i].hide()}}}function instanceOptions(o, callbackContext){var opts = $.extend({}, defaultOpts, o); opts.callbacks = {move:bind(opts.move, callbackContext), change:bind(opts.change, callbackContext), show:bind(opts.show, callbackContext), hide:bind(opts.hide, callbackContext), beforeShow:bind(opts.beforeShow, callbackContext)}; return opts}function spectrum(element, o){var opts = instanceOptions(o, element), flat = opts.flat, showSelectionPalette = opts.showSelectionPalette, localStorageKey = opts.localStorageKey, theme = opts.theme, callbacks = opts.callbacks, resize = throttle(reflow, 10), visible = false, isDragging = false, dragWidth = 0, dragHeight = 0, dragHelperHeight = 0, slideHeight = 0, slideWidth = 0, alphaWidth = 0, alphaSlideHelperWidth = 0, slideHelperHeight = 0, currentHue = 0, currentSaturation = 0, currentValue = 0, currentAlpha = 1, palette = [], paletteArray = [], paletteLookup = {}, selectionPalette = opts.selectionPalette.slice(0), maxSelectionSize = opts.maxSelectionSize, draggingClass = "sp-dragging", shiftMovementDirection = null; var doc = element.ownerDocument, body = doc.body, boundElement = $(element), disabled = false, container = $(markup, doc).addClass(theme), pickerContainer = container.find(".sp-picker-container"), dragger = container.find(".sp-color"), dragHelper = container.find(".sp-dragger"), slider = container.find(".sp-hue"), slideHelper = container.find(".sp-slider"), alphaSliderInner = container.find(".sp-alpha-inner"), alphaSlider = container.find(".sp-alpha"), alphaSlideHelper = container.find(".sp-alpha-handle"), textInput = container.find(".sp-input"), paletteContainer = container.find(".sp-palette"), initialColorContainer = container.find(".sp-initial"), cancelButton = container.find(".sp-cancel"), clearButton = container.find(".sp-clear"), chooseButton = container.find(".sp-choose"), toggleButton = container.find(".sp-palette-toggle"), isInput = boundElement.is("input"), isInputTypeColor = isInput && boundElement.attr("type") === "color" && inputTypeColorSupport(), shouldReplace = isInput && !flat, replacer = shouldReplace?$(replaceInput).addClass(theme).addClass(opts.className).addClass(opts.replacerClassName):$([]), offsetElement = shouldReplace?replacer:boundElement, previewElement = replacer.find(".sp-preview-inner"), initialColor = opts.color || isInput && boundElement.val(), colorOnShow = false, currentPreferredFormat = opts.preferredFormat, clickoutFiresChange = !opts.showButtons || opts.clickoutFiresChange, isEmpty = !initialColor, allowEmpty = opts.allowEmpty && !isInputTypeColor; function applyOptions(){if (opts.showPaletteOnly){opts.showPalette = true}toggleButton.text(opts.showPaletteOnly?opts.togglePaletteMoreText:opts.togglePaletteLessText); if (opts.palette){palette = opts.palette.slice(0); paletteArray = $.isArray(palette[0])?palette:[palette]; paletteLookup = {}; for (var i = 0; i < paletteArray.length; i++){for (var j = 0; j < paletteArray[i].length; j++){var rgb = tinycolor(paletteArray[i][j]).toRgbString(); paletteLookup[rgb] = true}}}container.toggleClass("sp-flat", flat); container.toggleClass("sp-input-disabled", !opts.showInput); container.toggleClass("sp-alpha-enabled", opts.showAlpha); container.toggleClass("sp-clear-enabled", allowEmpty); container.toggleClass("sp-buttons-disabled", !opts.showButtons); container.toggleClass("sp-palette-buttons-disabled", !opts.togglePaletteOnly); container.toggleClass("sp-palette-disabled", !opts.showPalette); container.toggleClass("sp-palette-only", opts.showPaletteOnly); container.toggleClass("sp-initial-disabled", !opts.showInitial); container.addClass(opts.className).addClass(opts.containerClassName); reflow()}function initialize(){if (IE){container.find("*:not(input)").attr("unselectable", "on")}applyOptions(); if (shouldReplace){boundElement.after(replacer).hide()}if (!allowEmpty){clearButton.hide()}if (flat){boundElement.after(container).hide()} else{var appendTo = opts.appendTo === "parent"?boundElement.parent():$(opts.appendTo); if (appendTo.length !== 1){appendTo = $("body")}appendTo.append(container)}updateSelectionPaletteFromStorage(); offsetElement.bind("click.spectrum touchstart.spectrum", function(e){if (!disabled){toggle()}e.stopPropagation(); if (!$(e.target).is("input")){e.preventDefault()}}); if (boundElement.is(":disabled") || opts.disabled === true){disable()}container.click(stopPropagation); textInput.change(setFromTextInput); textInput.bind("paste", function(){setTimeout(setFromTextInput, 1)}); textInput.keydown(function(e){if (e.keyCode == 13){setFromTextInput()}}); cancelButton.text(opts.cancelText); cancelButton.bind("click.spectrum", function(e){e.stopPropagation(); e.preventDefault(); revert(); hide()}); clearButton.attr("title", opts.clearText); clearButton.bind("click.spectrum", function(e){e.stopPropagation(); e.preventDefault(); isEmpty = true; move(); if (flat){updateOriginalInput(true)}}); chooseButton.text(opts.chooseText); chooseButton.bind("click.spectrum", function(e){e.stopPropagation(); e.preventDefault(); if (IE && textInput.is(":focus")){textInput.trigger("change")}if (isValid()){updateOriginalInput(true); hide()}}); toggleButton.text(opts.showPaletteOnly?opts.togglePaletteMoreText:opts.togglePaletteLessText); toggleButton.bind("click.spectrum", function(e){e.stopPropagation(); e.preventDefault(); opts.showPaletteOnly = !opts.showPaletteOnly; if (!opts.showPaletteOnly && !flat){container.css("left", "-=" + (pickerContainer.outerWidth(true) + 5))}applyOptions()}); draggable(alphaSlider, function(dragX, dragY, e){currentAlpha = dragX / alphaWidth; isEmpty = false; if (e.shiftKey){currentAlpha = Math.round(currentAlpha * 10) / 10}move()}, dragStart, dragStop); draggable(slider, function(dragX, dragY){currentHue = parseFloat(dragY / slideHeight); isEmpty = false; if (!opts.showAlpha){currentAlpha = 1}move()}, dragStart, dragStop); draggable(dragger, function(dragX, dragY, e){if (!e.shiftKey){shiftMovementDirection = null} else if (!shiftMovementDirection){var oldDragX = currentSaturation * dragWidth; var oldDragY = dragHeight - currentValue * dragHeight; var furtherFromX = Math.abs(dragX - oldDragX) > Math.abs(dragY - oldDragY); shiftMovementDirection = furtherFromX?"x":"y"}var setSaturation = !shiftMovementDirection || shiftMovementDirection === "x"; var setValue = !shiftMovementDirection || shiftMovementDirection === "y"; if (setSaturation){currentSaturation = parseFloat(dragX / dragWidth)}if (setValue){currentValue = parseFloat((dragHeight - dragY) / dragHeight)}isEmpty = false; if (!opts.showAlpha){currentAlpha = 1}move()}, dragStart, dragStop); if (!!initialColor){set(initialColor); updateUI(); currentPreferredFormat = opts.preferredFormat || tinycolor(initialColor).format; addColorToSelectionPalette(initialColor)} else{updateUI()}if (flat){show()}function paletteElementClick(e){if (e.data && e.data.ignore){set($(e.target).closest(".sp-thumb-el").data("color")); move()} else{set($(e.target).closest(".sp-thumb-el").data("color")); move(); updateOriginalInput(true); if (opts.hideAfterPaletteSelect){hide()}}return false}var paletteEvent = IE?"mousedown.spectrum":"click.spectrum touchstart.spectrum"; paletteContainer.delegate(".sp-thumb-el", paletteEvent, paletteElementClick); initialColorContainer.delegate(".sp-thumb-el:nth-child(1)", paletteEvent, {ignore:true}, paletteElementClick)}function updateSelectionPaletteFromStorage(){if (localStorageKey && window.localStorage){try{var oldPalette = window.localStorage[localStorageKey].split(",#"); if (oldPalette.length > 1){delete window.localStorage[localStorageKey]; $.each(oldPalette, function(i, c){addColorToSelectionPalette(c)})}} catch (e){}try{selectionPalette = window.localStorage[localStorageKey].split(";")} catch (e){}}}function addColorToSelectionPalette(color){if (showSelectionPalette){var rgb = tinycolor(color).toRgbString(); if (!paletteLookup[rgb] && $.inArray(rgb, selectionPalette) === - 1){selectionPalette.push(rgb); while (selectionPalette.length > maxSelectionSize){selectionPalette.shift()}}if (localStorageKey && window.localStorage){try{window.localStorage[localStorageKey] = selectionPalette.join(";")} catch (e){}}}}function getUniqueSelectionPalette(){var unique = []; if (opts.showPalette){for (var i = 0; i < selectionPalette.length; i++){var rgb = tinycolor(selectionPalette[i]).toRgbString(); if (!paletteLookup[rgb]){unique.push(selectionPalette[i])}}}return unique.reverse().slice(0, opts.maxSelectionSize)}function drawPalette(){var currentColor = get(); var html = $.map(paletteArray, function(palette, i){return paletteTemplate(palette, currentColor, "sp-palette-row sp-palette-row-" + i, opts)}); updateSelectionPaletteFromStorage(); if (selectionPalette){html.push(paletteTemplate(getUniqueSelectionPalette(), currentColor, "sp-palette-row sp-palette-row-selection", opts))}paletteContainer.html(html.join(""))}function drawInitial(){if (opts.showInitial){var initial = colorOnShow; var current = get(); initialColorContainer.html(paletteTemplate([initial, current], current, "sp-palette-row-initial", opts))}}function dragStart(){if (dragHeight <= 0 || dragWidth <= 0 || slideHeight <= 0){reflow()}isDragging = true; container.addClass(draggingClass); shiftMovementDirection = null; boundElement.trigger("dragstart.spectrum", [get()])}function dragStop(){isDragging = false; container.removeClass(draggingClass); boundElement.trigger("dragstop.spectrum", [get()])}function setFromTextInput(){var value = textInput.val(); if ((value === null || value === "") && allowEmpty){set(null); updateOriginalInput(true)} else{var tiny = tinycolor(value); if (tiny.isValid()){set(tiny); updateOriginalInput(true)} else{textInput.addClass("sp-validation-error")}}}function toggle(){if (visible){hide()} else{show()}}function show(){var event = $.Event("beforeShow.spectrum"); if (visible){reflow(); return}boundElement.trigger(event, [get()]); if (callbacks.beforeShow(get()) === false || event.isDefaultPrevented()){return}hideAll(); visible = true; $(doc).bind("keydown.spectrum", onkeydown); $(doc).bind("click.spectrum", clickout); $(window).bind("resize.spectrum", resize); replacer.addClass("sp-active"); container.removeClass("sp-hidden"); reflow(); updateUI(); colorOnShow = get(); drawInitial(); callbacks.show(colorOnShow); boundElement.trigger("show.spectrum", [colorOnShow])}function onkeydown(e){if (e.keyCode === 27){hide()}}function clickout(e){if (e.button == 2){return}if (isDragging){return}if (clickoutFiresChange){updateOriginalInput(true)} else{revert()}hide()}function hide(){if (!visible || flat){return}visible = false; $(doc).unbind("keydown.spectrum", onkeydown); $(doc).unbind("click.spectrum", clickout); $(window).unbind("resize.spectrum", resize); replacer.removeClass("sp-active"); container.addClass("sp-hidden"); callbacks.hide(get()); boundElement.trigger("hide.spectrum", [get()])}function revert(){set(colorOnShow, true)}function set(color, ignoreFormatChange){if (tinycolor.equals(color, get())){updateUI(); return}var newColor, newHsv; if (!color && allowEmpty){isEmpty = true} else{isEmpty = false; newColor = tinycolor(color); newHsv = newColor.toHsv(); currentHue = newHsv.h % 360 / 360; currentSaturation = newHsv.s; currentValue = newHsv.v; currentAlpha = newHsv.a}updateUI(); if (newColor && newColor.isValid() && !ignoreFormatChange){currentPreferredFormat = opts.preferredFormat || newColor.getFormat()}}function get(opts){opts = opts || {}; if (allowEmpty && isEmpty){return null}return tinycolor.fromRatio({h:currentHue, s:currentSaturation, v:currentValue, a:Math.round(currentAlpha * 100) / 100}, {format:opts.format || currentPreferredFormat})}function isValid(){return!textInput.hasClass("sp-validation-error")}function move(){updateUI(); callbacks.move(get()); boundElement.trigger("move.spectrum", [get()])}function updateUI(){textInput.removeClass("sp-validation-error"); updateHelperLocations(); var flatColor = tinycolor.fromRatio({h:currentHue, s:1, v:1}); dragger.css("background-color", flatColor.toHexString()); var format = currentPreferredFormat; if (currentAlpha < 1 && !(currentAlpha === 0 && format === "name")){if (format === "hex" || format === "hex3" || format === "hex6" || format === "name"){format = "rgb"}}var realColor = get({format:format}), displayColor = ""; previewElement.removeClass("sp-clear-display"); previewElement.css("background-color", "transparent"); if (!realColor && allowEmpty){previewElement.addClass("sp-clear-display")} else{var realHex = realColor.toHexString(), realRgb = realColor.toRgbString(); if (rgbaSupport || realColor.alpha === 1){previewElement.css("background-color", realRgb)} else{previewElement.css("background-color", "transparent"); previewElement.css("filter", realColor.toFilter())}if (opts.showAlpha){var rgb = realColor.toRgb(); rgb.a = 0; var realAlpha = tinycolor(rgb).toRgbString(); var gradient = "linear-gradient(left, " + realAlpha + ", " + realHex + ")"; if (IE){alphaSliderInner.css("filter", tinycolor(realAlpha).toFilter({gradientType:1}, realHex))} else{alphaSliderInner.css("background", "-webkit-" + gradient); alphaSliderInner.css("background", "-moz-" + gradient); alphaSliderInner.css("background", "-ms-" + gradient); alphaSliderInner.css("background", "linear-gradient(to right, " + realAlpha + ", " + realHex + ")")}}displayColor = realColor.toString(format)}if (opts.showInput){textInput.val(displayColor)}if (opts.showPalette){drawPalette()}drawInitial()}function updateHelperLocations(){var s = currentSaturation; var v = currentValue; if (allowEmpty && isEmpty){alphaSlideHelper.hide(); slideHelper.hide(); dragHelper.hide()} else{alphaSlideHelper.show(); slideHelper.show(); dragHelper.show(); var dragX = s * dragWidth; var dragY = dragHeight - v * dragHeight; dragX = Math.max( - dragHelperHeight, Math.min(dragWidth - dragHelperHeight, dragX - dragHelperHeight)); dragY = Math.max( - dragHelperHeight, Math.min(dragHeight - dragHelperHeight, dragY - dragHelperHeight)); dragHelper.css({top:dragY + "px", left:dragX + "px"}); var alphaX = currentAlpha * alphaWidth; alphaSlideHelper.css({left:alphaX - alphaSlideHelperWidth / 2 + "px"}); var slideY = currentHue * slideHeight; slideHelper.css({top:slideY - slideHelperHeight + "px"})}}function updateOriginalInput(fireCallback){var color = get(), displayColor = "", hasChanged = !tinycolor.equals(color, colorOnShow); if (color){displayColor = color.toString(currentPreferredFormat); addColorToSelectionPalette(color)}if (isInput){boundElement.val(displayColor)}if (fireCallback && hasChanged){callbacks.change(color); boundElement.trigger("change", [color])}}function reflow(){if (!visible){return}dragWidth = dragger.width(); dragHeight = dragger.height(); dragHelperHeight = dragHelper.height(); slideWidth = slider.width(); slideHeight = slider.height(); slideHelperHeight = slideHelper.height(); alphaWidth = alphaSlider.width(); alphaSlideHelperWidth = alphaSlideHelper.width(); if (!flat){container.css("position", "absolute"); if (opts.offset){container.offset(opts.offset)} else{container.offset(getOffset(container, offsetElement))}}updateHelperLocations(); if (opts.showPalette){drawPalette()}boundElement.trigger("reflow.spectrum")}function destroy(){boundElement.show(); offsetElement.unbind("click.spectrum touchstart.spectrum"); container.remove(); replacer.remove(); spectrums[spect.id] = null}function option(optionName, optionValue){if (optionName === undefined){return $.extend({}, opts)}if (optionValue === undefined){return opts[optionName]}opts[optionName] = optionValue; if (optionName === "preferredFormat"){currentPreferredFormat = opts.preferredFormat}applyOptions()}function enable(){disabled = false; boundElement.attr("disabled", false); offsetElement.removeClass("sp-disabled")}function disable(){hide(); disabled = true; boundElement.attr("disabled", true); offsetElement.addClass("sp-disabled")}function setOffset(coord){opts.offset = coord; reflow()}initialize(); var spect = {show:show, hide:hide, toggle:toggle, reflow:reflow, option:option, enable:enable, disable:disable, offset:setOffset, set:function(c){set(c); updateOriginalInput()}, get:get, destroy:destroy, container:container}; spect.id = spectrums.push(spect) - 1; return spect}function getOffset(picker, input){var extraY = 0; var dpWidth = picker.outerWidth(); var dpHeight = picker.outerHeight(); var inputHeight = input.outerHeight(); var doc = picker[0].ownerDocument; var docElem = doc.documentElement; var viewWidth = docElem.clientWidth + $(doc).scrollLeft(); var viewHeight = docElem.clientHeight + $(doc).scrollTop(); var offset = input.offset(); offset.top += inputHeight; offset.left -= Math.min(offset.left, offset.left + dpWidth > viewWidth && viewWidth > dpWidth?Math.abs(offset.left + dpWidth - viewWidth):0); offset.top -= Math.min(offset.top, offset.top + dpHeight > viewHeight && viewHeight > dpHeight?Math.abs(dpHeight + inputHeight - extraY):extraY); return offset}function noop(){}function stopPropagation(e){e.stopPropagation()}function bind(func, obj){var slice = Array.prototype.slice; var args = slice.call(arguments, 2); return function(){return func.apply(obj, args.concat(slice.call(arguments)))}}function draggable(element, onmove, onstart, onstop){onmove = onmove || function(){}; onstart = onstart || function(){}; onstop = onstop || function(){}; var doc = document; var dragging = false; var offset = {}; var maxHeight = 0; var maxWidth = 0; var hasTouch = "ontouchstart"in window; var duringDragEvents = {}; duringDragEvents["selectstart"] = prevent; duringDragEvents["dragstart"] = prevent; duringDragEvents["touchmove mousemove"] = move; duringDragEvents["touchend mouseup"] = stop; function prevent(e){if (e.stopPropagation){e.stopPropagation()}if (e.preventDefault){e.preventDefault()}e.returnValue = false}function move(e){if (dragging){if (IE && doc.documentMode < 9 && !e.button){return stop()}var t0 = e.originalEvent && e.originalEvent.touches && e.originalEvent.touches[0]; var pageX = t0 && t0.pageX || e.pageX; var pageY = t0 && t0.pageY || e.pageY; var dragX = Math.max(0, Math.min(pageX - offset.left, maxWidth)); var dragY = Math.max(0, Math.min(pageY - offset.top, maxHeight)); if (hasTouch){prevent(e)}onmove.apply(element, [dragX, dragY, e])}}function start(e){var rightclick = e.which?e.which == 3:e.button == 2; if (!rightclick && !dragging){if (onstart.apply(element, arguments) !== false){dragging = true; maxHeight = $(element).height(); maxWidth = $(element).width(); offset = $(element).offset(); $(doc).bind(duringDragEvents); $(doc.body).addClass("sp-dragging"); move(e); prevent(e)}}}function stop(){if (dragging){$(doc).unbind(duringDragEvents); $(doc.body).removeClass("sp-dragging"); setTimeout(function(){onstop.apply(element, arguments)}, 0)}dragging = false}$(element).bind("touchstart mousedown", start)}function throttle(func, wait, debounce){var timeout; return function(){var context = this, args = arguments; var throttler = function(){timeout = null; func.apply(context, args)}; if (debounce)clearTimeout(timeout); if (debounce || !timeout)timeout = setTimeout(throttler, wait)}}function inputTypeColorSupport(){return $.fn.spectrum.inputTypeColorSupport()}var dataID = "spectrum.id"; $.fn.spectrum = function(opts, extra){if (typeof opts == "string"){var returnValue = this; var args = Array.prototype.slice.call(arguments, 1); this.each(function(){var spect = spectrums[$(this).data(dataID)]; if (spect){var method = spect[opts]; if (!method){throw new Error("Spectrum: no such method: '" + opts + "'")}if (opts == "get"){returnValue = spect.get()} else if (opts == "container"){returnValue = spect.container} else if (opts == "option"){returnValue = spect.option.apply(spect, args)} else if (opts == "destroy"){spect.destroy(); $(this).removeData(dataID)} else{method.apply(spect, args)}}}); return returnValue}return this.spectrum("destroy").each(function(){var options = $.extend({}, opts, $(this).data()); var spect = spectrum(this, options); $(this).data(dataID, spect.id)})}; $.fn.spectrum.load = true; $.fn.spectrum.loadOpts = {}; $.fn.spectrum.draggable = draggable; $.fn.spectrum.defaults = defaultOpts; $.fn.spectrum.inputTypeColorSupport = function inputTypeColorSupport(){if (typeof inputTypeColorSupport._cachedResult === "undefined"){var colorInput = $("<input type='color'/>")[0]; inputTypeColorSupport._cachedResult = colorInput.type === "color" && colorInput.value !== ""}return inputTypeColorSupport._cachedResult}; $.spectrum = {}; $.spectrum.localization = {}; $.spectrum.palettes = {}; $.fn.spectrum.processNativeColorInputs = function(){var colorInputs = $("input[type=color]"); if (colorInputs.length && !inputTypeColorSupport()){colorInputs.spectrum({preferredFormat:"hex6"})}}; (function(){var trimLeft = /^[\s,#]+/, trimRight = /\s+$/, tinyCounter = 0, math = Math, mathRound = math.round, mathMin = math.min, mathMax = math.max, mathRandom = math.random; var tinycolor = function(color, opts){color = color?color:""; opts = opts || {}; if (color instanceof tinycolor){return color}if (!(this instanceof tinycolor)){return new tinycolor(color, opts)}var rgb = inputToRGB(color); this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format; this._gradientType = opts.gradientType; if (this._r < 1){this._r = mathRound(this._r)}if (this._g < 1){this._g = mathRound(this._g)}if (this._b < 1){this._b = mathRound(this._b)}this._ok = rgb.ok; this._tc_id = tinyCounter++}; tinycolor.prototype = {isDark:function(){return this.getBrightness() < 128}, isLight:function(){return!this.isDark()}, isValid:function(){return this._ok}, getOriginalInput:function(){return this._originalInput}, getFormat:function(){return this._format}, getAlpha:function(){return this._a}, getBrightness:function(){var rgb = this.toRgb(); return(rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3}, setAlpha:function(value){this._a = boundAlpha(value); this._roundA = mathRound(100 * this._a) / 100; return this}, toHsv:function(){var hsv = rgbToHsv(this._r, this._g, this._b); return{h:hsv.h * 360, s:hsv.s, v:hsv.v, a:this._a}}, toHsvString:function(){var hsv = rgbToHsv(this._r, this._g, this._b); var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100); return this._a == 1?"hsv(" + h + ", " + s + "%, " + v + "%)":"hsva(" + h + ", " + s + "%, " + v + "%, " + this._roundA + ")"}, toHsl:function(){var hsl = rgbToHsl(this._r, this._g, this._b); return{h:hsl.h * 360, s:hsl.s, l:hsl.l, a:this._a}}, toHslString:function(){var hsl = rgbToHsl(this._r, this._g, this._b); var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100); return this._a == 1?"hsl(" + h + ", " + s + "%, " + l + "%)":"hsla(" + h + ", " + s + "%, " + l + "%, " + this._roundA + ")"}, toHex:function(allow3Char){return rgbToHex(this._r, this._g, this._b, allow3Char)}, toHexString:function(allow3Char){return"#" + this.toHex(allow3Char)}, toHex8:function(){return rgbaToHex(this._r, this._g, this._b, this._a)}, toHex8String:function(){return"#" + this.toHex8()}, toRgb:function(){return{r:mathRound(this._r), g:mathRound(this._g), b:mathRound(this._b), a:this._a}}, toRgbString:function(){return this._a == 1?"rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")":"rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")"}, toPercentageRgb:function(){return{r:mathRound(bound01(this._r, 255) * 100) + "%", g:mathRound(bound01(this._g, 255) * 100) + "%", b:mathRound(bound01(this._b, 255) * 100) + "%", a:this._a}}, toPercentageRgbString:function(){return this._a == 1?"rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)":"rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")"}, toName:function(){if (this._a === 0){return"transparent"}if (this._a < 1){return false}return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false}, toFilter:function(secondColor){var hex8String = "#" + rgbaToHex(this._r, this._g, this._b, this._a); var secondHex8String = hex8String; var gradientType = this._gradientType?"GradientType = 1, ":""; if (secondColor){var s = tinycolor(secondColor); secondHex8String = s.toHex8String()}return"progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")"}, toString:function(format){var formatSet = !!format; format = format || this._format; var formattedString = false; var hasAlpha = this._a < 1 && this._a >= 0; var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "name"); if (needsAlphaFormat){if (format === "name" && this._a === 0){return this.toName()}return this.toRgbString()}if (format === "rgb"){formattedString = this.toRgbString()}if (format === "prgb"){formattedString = this.toPercentageRgbString()}if (format === "hex" || format === "hex6"){formattedString = this.toHexString()}if (format === "hex3"){formattedString = this.toHexString(true)}if (format === "hex8"){formattedString = this.toHex8String()}if (format === "name"){formattedString = this.toName()}if (format === "hsl"){formattedString = this.toHslString()}if (format === "hsv"){formattedString = this.toHsvString()}return formattedString || this.toHexString()}, _applyModification:function(fn, args){var color = fn.apply(null, [this].concat([].slice.call(args))); this._r = color._r; this._g = color._g; this._b = color._b; this.setAlpha(color._a); return this}, lighten:function(){return this._applyModification(lighten, arguments)}, brighten:function(){return this._applyModification(brighten, arguments)}, darken:function(){return this._applyModification(darken, arguments)}, desaturate:function(){return this._applyModification(desaturate, arguments)}, saturate:function(){return this._applyModification(saturate, arguments)}, greyscale:function(){return this._applyModification(greyscale, arguments)}, spin:function(){return this._applyModification(spin, arguments)}, _applyCombination:function(fn, args){return fn.apply(null, [this].concat([].slice.call(args)))}, analogous:function(){return this._applyCombination(analogous, arguments)}, complement:function(){return this._applyCombination(complement, arguments)}, monochromatic:function(){return this._applyCombination(monochromatic, arguments)}, splitcomplement:function(){return this._applyCombination(splitcomplement, arguments)}, triad:function(){return this._applyCombination(triad, arguments)}, tetrad:function(){return this._applyCombination(tetrad, arguments)}}; tinycolor.fromRatio = function(color, opts){if (typeof color == "object"){var newColor = {}; for (var i in color){if (color.hasOwnProperty(i)){if (i === "a"){newColor[i] = color[i]} else{newColor[i] = convertToPercentage(color[i])}}}color = newColor}return tinycolor(color, opts)}; function inputToRGB(color){var rgb = {r:0, g:0, b:0}; var a = 1; var ok = false; var format = false; if (typeof color == "string"){color = stringInputToObject(color)}if (typeof color == "object"){if (color.hasOwnProperty("r") && color.hasOwnProperty("g") && color.hasOwnProperty("b")){rgb = rgbToRgb(color.r, color.g, color.b); ok = true; format = String(color.r).substr( - 1) === "%"?"prgb":"rgb"} else if (color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("v")){color.s = convertToPercentage(color.s); color.v = convertToPercentage(color.v); rgb = hsvToRgb(color.h, color.s, color.v); ok = true; format = "hsv"} else if (color.hasOwnProperty("h") && color.hasOwnProperty("s") && color.hasOwnProperty("l")){color.s = convertToPercentage(color.s); color.l = convertToPercentage(color.l); rgb = hslToRgb(color.h, color.s, color.l); ok = true; format = "hsl"}if (color.hasOwnProperty("a")){a = color.a}}a = boundAlpha(a); return{ok:ok, format:color.format || format, r:mathMin(255, mathMax(rgb.r, 0)), g:mathMin(255, mathMax(rgb.g, 0)), b:mathMin(255, mathMax(rgb.b, 0)), a:a}}function rgbToRgb(r, g, b){return{r:bound01(r, 255) * 255, g:bound01(g, 255) * 255, b:bound01(b, 255) * 255}}function rgbToHsl(r, g, b){r = bound01(r, 255); g = bound01(g, 255); b = bound01(b, 255); var max = mathMax(r, g, b), min = mathMin(r, g, b); var h, s, l = (max + min) / 2; if (max == min){h = s = 0} else{var d = max - min; s = l > .5?d / (2 - max - min):d / (max + min); switch (max){case r:h = (g - b) / d + (g < b?6:0); break; case g:h = (b - r) / d + 2; break; case b:h = (r - g) / d + 4; break}h /= 6}return{h:h, s:s, l:l}}function hslToRgb(h, s, l){var r, g, b; h = bound01(h, 360); s = bound01(s, 100); l = bound01(l, 100); function hue2rgb(p, q, t){if (t < 0)t += 1; if (t > 1)t -= 1; if (t < 1 / 6)return p + (q - p) * 6 * t; if (t < 1 / 2)return q; if (t < 2 / 3)return p + (q - p) * (2 / 3 - t) * 6; return p}if (s === 0){r = g = b = l} else{var q = l < .5?l * (1 + s):l + s - l * s; var p = 2 * l - q; r = hue2rgb(p, q, h + 1 / 3); g = hue2rgb(p, q, h); b = hue2rgb(p, q, h - 1 / 3)}return{r:r * 255, g:g * 255, b:b * 255}}function rgbToHsv(r, g, b){r = bound01(r, 255); g = bound01(g, 255); b = bound01(b, 255); var max = mathMax(r, g, b), min = mathMin(r, g, b); var h, s, v = max; var d = max - min; s = max === 0?0:d / max; if (max == min){h = 0} else{switch (max){case r:h = (g - b) / d + (g < b?6:0); break; case g:h = (b - r) / d + 2; break; case b:h = (r - g) / d + 4; break}h /= 6}return{h:h, s:s, v:v}}function hsvToRgb(h, s, v){h = bound01(h, 360) * 6; s = bound01(s, 100); v = bound01(v, 100); var i = math.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b = [p, p, t, v, v, q][mod]; return{r:r * 255, g:g * 255, b:b * 255}}function rgbToHex(r, g, b, allow3Char){var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)){return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0)}return hex.join("")}function rgbaToHex(r, g, b, a){var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))]; return hex.join("")}tinycolor.equals = function(color1, color2){if (!color1 || !color2){return false}return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString()}; tinycolor.random = function(){return tinycolor.fromRatio({r:mathRandom(), g:mathRandom(),
	b:mathRandom()})}; function desaturate(color, amount){amount = amount === 0?0:amount || 10; var hsl = tinycolor(color).toHsl(); hsl.s -= amount / 100; hsl.s = clamp01(hsl.s); return tinycolor(hsl)}function saturate(color, amount){amount = amount === 0?0:amount || 10; var hsl = tinycolor(color).toHsl(); hsl.s += amount / 100; hsl.s = clamp01(hsl.s); return tinycolor(hsl)}function greyscale(color){return tinycolor(color).desaturate(100)}function lighten(color, amount){amount = amount === 0?0:amount || 10; var hsl = tinycolor(color).toHsl(); hsl.l += amount / 100; hsl.l = clamp01(hsl.l); return tinycolor(hsl)}function brighten(color, amount){amount = amount === 0?0:amount || 10; var rgb = tinycolor(color).toRgb(); rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100)))); rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100)))); rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100)))); return tinycolor(rgb)}function darken(color, amount){amount = amount === 0?0:amount || 10; var hsl = tinycolor(color).toHsl(); hsl.l -= amount / 100; hsl.l = clamp01(hsl.l); return tinycolor(hsl)}function spin(color, amount){var hsl = tinycolor(color).toHsl(); var hue = (mathRound(hsl.h) + amount) % 360; hsl.h = hue < 0?360 + hue:hue; return tinycolor(hsl)}function complement(color){var hsl = tinycolor(color).toHsl(); hsl.h = (hsl.h + 180) % 360; return tinycolor(hsl)}function triad(color){var hsl = tinycolor(color).toHsl(); var h = hsl.h; return[tinycolor(color), tinycolor({h:(h + 120) % 360, s:hsl.s, l:hsl.l}), tinycolor({h:(h + 240) % 360, s:hsl.s, l:hsl.l})]}function tetrad(color){var hsl = tinycolor(color).toHsl(); var h = hsl.h; return[tinycolor(color), tinycolor({h:(h + 90) % 360, s:hsl.s, l:hsl.l}), tinycolor({h:(h + 180) % 360, s:hsl.s, l:hsl.l}), tinycolor({h:(h + 270) % 360, s:hsl.s, l:hsl.l})]}function splitcomplement(color){var hsl = tinycolor(color).toHsl(); var h = hsl.h; return[tinycolor(color), tinycolor({h:(h + 72) % 360, s:hsl.s, l:hsl.l}), tinycolor({h:(h + 216) % 360, s:hsl.s, l:hsl.l})]}function analogous(color, results, slices){results = results || 6; slices = slices || 30; var hsl = tinycolor(color).toHsl(); var part = 360 / slices; var ret = [tinycolor(color)]; for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ){hsl.h = (hsl.h + part) % 360; ret.push(tinycolor(hsl))}return ret}function monochromatic(color, results){results = results || 6; var hsv = tinycolor(color).toHsv(); var h = hsv.h, s = hsv.s, v = hsv.v; var ret = []; var modification = 1 / results; while (results--){ret.push(tinycolor({h:h, s:s, v:v})); v = (v + modification) % 1}return ret}tinycolor.mix = function(color1, color2, amount){amount = amount === 0?0:amount || 50; var rgb1 = tinycolor(color1).toRgb(); var rgb2 = tinycolor(color2).toRgb(); var p = amount / 100; var w = p * 2 - 1; var a = rgb2.a - rgb1.a; var w1; if (w * a == - 1){w1 = w} else{w1 = (w + a) / (1 + w * a)}w1 = (w1 + 1) / 2; var w2 = 1 - w1; var rgba = {r:rgb2.r * w1 + rgb1.r * w2, g:rgb2.g * w1 + rgb1.g * w2, b:rgb2.b * w1 + rgb1.b * w2, a:rgb2.a * p + rgb1.a * (1 - p)}; return tinycolor(rgba)}; tinycolor.readability = function(color1, color2){var c1 = tinycolor(color1); var c2 = tinycolor(color2); var rgb1 = c1.toRgb(); var rgb2 = c2.toRgb(); var brightnessA = c1.getBrightness(); var brightnessB = c2.getBrightness(); var colorDiff = Math.max(rgb1.r, rgb2.r) - Math.min(rgb1.r, rgb2.r) + Math.max(rgb1.g, rgb2.g) - Math.min(rgb1.g, rgb2.g) + Math.max(rgb1.b, rgb2.b) - Math.min(rgb1.b, rgb2.b); return{brightness:Math.abs(brightnessA - brightnessB), color:colorDiff}}; tinycolor.isReadable = function(color1, color2){var readability = tinycolor.readability(color1, color2); return readability.brightness > 125 && readability.color > 500}; tinycolor.mostReadable = function(baseColor, colorList){var bestColor = null; var bestScore = 0; var bestIsReadable = false; for (var i = 0; i < colorList.length; i++){var readability = tinycolor.readability(baseColor, colorList[i]); var readable = readability.brightness > 125 && readability.color > 500; var score = 3 * (readability.brightness / 125) + readability.color / 500; if (readable && !bestIsReadable || readable && bestIsReadable && score > bestScore || !readable && !bestIsReadable && score > bestScore){bestIsReadable = readable; bestScore = score; bestColor = tinycolor(colorList[i])}}return bestColor}; var names = tinycolor.names = {aliceblue:"f0f8ff", antiquewhite:"faebd7", aqua:"0ff", aquamarine:"7fffd4", azure:"f0ffff", beige:"f5f5dc", bisque:"ffe4c4", black:"000", blanchedalmond:"ffebcd", blue:"00f", blueviolet:"8a2be2", brown:"a52a2a", burlywood:"deb887", burntsienna:"ea7e5d", cadetblue:"5f9ea0", chartreuse:"7fff00", chocolate:"d2691e", coral:"ff7f50", cornflowerblue:"6495ed", cornsilk:"fff8dc", crimson:"dc143c", cyan:"0ff", darkblue:"00008b", darkcyan:"008b8b", darkgoldenrod:"b8860b", darkgray:"a9a9a9", darkgreen:"006400", darkgrey:"a9a9a9", darkkhaki:"bdb76b", darkmagenta:"8b008b", darkolivegreen:"556b2f", darkorange:"ff8c00", darkorchid:"9932cc", darkred:"8b0000", darksalmon:"e9967a", darkseagreen:"8fbc8f", darkslateblue:"483d8b", darkslategray:"2f4f4f", darkslategrey:"2f4f4f", darkturquoise:"00ced1", darkviolet:"9400d3", deeppink:"ff1493", deepskyblue:"00bfff", dimgray:"696969", dimgrey:"696969", dodgerblue:"1e90ff", firebrick:"b22222", floralwhite:"fffaf0", forestgreen:"228b22", fuchsia:"f0f", gainsboro:"dcdcdc", ghostwhite:"f8f8ff", gold:"ffd700", goldenrod:"daa520", gray:"808080", green:"008000", greenyellow:"adff2f", grey:"808080", honeydew:"f0fff0", hotpink:"ff69b4", indianred:"cd5c5c", indigo:"4b0082", ivory:"fffff0", khaki:"f0e68c", lavender:"e6e6fa", lavenderblush:"fff0f5", lawngreen:"7cfc00", lemonchiffon:"fffacd", lightblue:"add8e6", lightcoral:"f08080", lightcyan:"e0ffff", lightgoldenrodyellow:"fafad2", lightgray:"d3d3d3", lightgreen:"90ee90", lightgrey:"d3d3d3", lightpink:"ffb6c1", lightsalmon:"ffa07a", lightseagreen:"20b2aa", lightskyblue:"87cefa", lightslategray:"789", lightslategrey:"789", lightsteelblue:"b0c4de", lightyellow:"ffffe0", lime:"0f0", limegreen:"32cd32", linen:"faf0e6", magenta:"f0f", maroon:"800000", mediumaquamarine:"66cdaa", mediumblue:"0000cd", mediumorchid:"ba55d3", mediumpurple:"9370db", mediumseagreen:"3cb371", mediumslateblue:"7b68ee", mediumspringgreen:"00fa9a", mediumturquoise:"48d1cc", mediumvioletred:"c71585", midnightblue:"191970", mintcream:"f5fffa", mistyrose:"ffe4e1", moccasin:"ffe4b5", navajowhite:"ffdead", navy:"000080", oldlace:"fdf5e6", olive:"808000", olivedrab:"6b8e23", orange:"ffa500", orangered:"ff4500", orchid:"da70d6", palegoldenrod:"eee8aa", palegreen:"98fb98", paleturquoise:"afeeee", palevioletred:"db7093", papayawhip:"ffefd5", peachpuff:"ffdab9", peru:"cd853f", pink:"ffc0cb", plum:"dda0dd", powderblue:"b0e0e6", purple:"800080", rebeccapurple:"663399", red:"f00", rosybrown:"bc8f8f", royalblue:"4169e1", saddlebrown:"8b4513", salmon:"fa8072", sandybrown:"f4a460", seagreen:"2e8b57", seashell:"fff5ee", sienna:"a0522d", silver:"c0c0c0", skyblue:"87ceeb", slateblue:"6a5acd", slategray:"708090", slategrey:"708090", snow:"fffafa", springgreen:"00ff7f", steelblue:"4682b4", tan:"d2b48c", teal:"008080", thistle:"d8bfd8", tomato:"ff6347", turquoise:"40e0d0", violet:"ee82ee", wheat:"f5deb3", white:"fff", whitesmoke:"f5f5f5", yellow:"ff0", yellowgreen:"9acd32"}; var hexNames = tinycolor.hexNames = flip(names); function flip(o){var flipped = {}; for (var i in o){if (o.hasOwnProperty(i)){flipped[o[i]] = i}}return flipped}function boundAlpha(a){a = parseFloat(a); if (isNaN(a) || a < 0 || a > 1){a = 1}return a}function bound01(n, max){if (isOnePointZero(n)){n = "100%"}var processPercent = isPercentage(n); n = mathMin(max, mathMax(0, parseFloat(n))); if (processPercent){n = parseInt(n * max, 10) / 100}if (math.abs(n - max) < 1e-6){return 1}return n % max / parseFloat(max)}function clamp01(val){return mathMin(1, mathMax(0, val))}function parseIntFromHex(val){return parseInt(val, 16)}function isOnePointZero(n){return typeof n == "string" && n.indexOf(".") != - 1 && parseFloat(n) === 1}function isPercentage(n){return typeof n === "string" && n.indexOf("%") != - 1}function pad2(c){return c.length == 1?"0" + c:"" + c}function convertToPercentage(n){if (n <= 1){n = n * 100 + "%"}return n}function convertDecimalToHex(d){return Math.round(parseFloat(d) * 255).toString(16)}function convertHexToDecimal(h){return parseIntFromHex(h) / 255}var matchers = function(){var CSS_INTEGER = "[-\\+]?\\d+%?"; var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?"; var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")"; var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?"; var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?"; return{rgb:new RegExp("rgb" + PERMISSIVE_MATCH3), rgba:new RegExp("rgba" + PERMISSIVE_MATCH4), hsl:new RegExp("hsl" + PERMISSIVE_MATCH3), hsla:new RegExp("hsla" + PERMISSIVE_MATCH4), hsv:new RegExp("hsv" + PERMISSIVE_MATCH3), hsva:new RegExp("hsva" + PERMISSIVE_MATCH4), hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/, hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/, hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}(); function stringInputToObject(color){color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase(); var named = false; if (names[color]){color = names[color]; named = true} else if (color == "transparent"){return{r:0, g:0, b:0, a:0, format:"name"}}var match; if (match = matchers.rgb.exec(color)){return{r:match[1], g:match[2], b:match[3]}}if (match = matchers.rgba.exec(color)){return{r:match[1], g:match[2], b:match[3], a:match[4]}}if (match = matchers.hsl.exec(color)){return{h:match[1], s:match[2], l:match[3]}}if (match = matchers.hsla.exec(color)){return{h:match[1], s:match[2], l:match[3], a:match[4]}}if (match = matchers.hsv.exec(color)){return{h:match[1], s:match[2], v:match[3]}}if (match = matchers.hsva.exec(color)){return{h:match[1], s:match[2], v:match[3], a:match[4]}}if (match = matchers.hex8.exec(color)){return{a:convertHexToDecimal(match[1]), r:parseIntFromHex(match[2]), g:parseIntFromHex(match[3]), b:parseIntFromHex(match[4]), format:named?"name":"hex8"}}if (match = matchers.hex6.exec(color)){return{r:parseIntFromHex(match[1]), g:parseIntFromHex(match[2]), b:parseIntFromHex(match[3]), format:named?"name":"hex"}}if (match = matchers.hex3.exec(color)){return{r:parseIntFromHex(match[1] + "" + match[1]), g:parseIntFromHex(match[2] + "" + match[2]), b:parseIntFromHex(match[3] + "" + match[3]), format:named?"name":"hex"}}return false}window.tinycolor = tinycolor})(); $(function(){if ($.fn.spectrum.load){$.fn.spectrum.processNativeColorInputs()}})});
        /*
         * Custom jQuery Functions
         */
         jQuery(function($) {

         	var documentOnReady = {
        // Initialize 
        init: function(){
        	documentOnReady.onFormChange();
        	documentOnReady.default();
        },
        default: function() {
        	$(".colorpicker").spectrum({
        		showInput: true,
        		preferredFormat: "hex"
        	});
                        // Switchery
                        var elems = Array.prototype.slice.call(document.querySelectorAll('.switchery'));
                        elems.forEach(function(html) {
                        	var switchery = new Switchery(html, { color: '#5469bb' });
                        });
                    },
                /**
                 * Default options
                 */
                 onFormChange: function() {

                // Show submit button on form change
                $('form').on('keyup change', ':input', function() {
                	$('.page-navbar .navbar-menu').hide();
                	$('.page-navbar .form-action').show();
                });
                        // Hide sumit button on cancel
                        $(".form-action .form-cancel").click(function() {
                        	$('.page-navbar .navbar-menu').show();
                        	$('.page-navbar .form-action').hide();
                        });
                    }

                }

                $(document).ready(documentOnReady.init);
            });
         jQuery(document).ready(function($){
         	if ($("#css_editor").get(0) || $("#javascript_editor").get(0) || $("#analytics_editor").get(0)) {
         		var customCSS = ace.edit("css_editor");
         		var customJS = ace.edit("javascript_editor");
         		var analyticsCode = ace.edit("analytics_editor");
         	}
// CSS editor
if ($("#css_editor").get(0)) {
	customCSS.setTheme("ace/theme/monokai");
	customCSS.getSession().setMode("ace/mode/css");
	customCSS.setShowPrintMargin(false);
}
// Set Editiors
if ($("#javascript_editor").get(0) || $("#analytics_editor").get(0)) {
	var customJS = ace.edit("javascript_editor");
	var analyticsCode = ace.edit("analytics_editor");
}

// Javascript editor
if ($("#javascript_editor").get(0)) {
	customJS.setTheme("ace/theme/monokai");
	customJS.getSession().setMode("ace/mode/javascript");
	customJS.setShowPrintMargin(false);
}
 $('.menu_checkbox').click(function(){
                   console.log($(this).attr('checked'))
                   if($(this).attr('checked')=='checked')
                   ($(this).parent().parent().parent().find('.menu_checkbox').first().attr('checked',true))
               });
// Analytics editor
if ($("#analytics_editor").get(0)) {
	analyticsCode.setTheme("ace/theme/monokai");
	analyticsCode.getSession().setMode("ace/mode/javascript");
	analyticsCode.setShowPrintMargin(false);
}

// Settings form ajax
$('#form-settings').submit(function(e) {
	e.preventDefault();
	var spinner = Ladda.create(document.querySelector('.save-settings-spinner'));
	var formData = $("#form-settings").serialize();
          var menu_items = new Array();
        $('ul.sortable li').find("input[type='checkbox']:checked").each(function (){
//            console.log($(this).parent().data('id')+" "+$(this).parent().data('parent-id'));
            if(menu_items[$(this).parent().data('parent-id')]===undefined){
              menu_items[$(this).parent().data('parent-id')] = new Array;
          }
            menu_items[$(this).parent().data('parent-id')].push($(this).parent().data('id'));
        });
       var menuitems = menu_items;
       console.log(menuitems);
    formData += "&custom_js=" + encodeURIComponent(customJS.getValue()) +"&menu_items="+JSON.stringify(menuitems) + "&analytics_code=" + encodeURIComponent(analyticsCode.getValue());
	$.ajax({
		url : ajaxurl,
		type: "POST",
		data : formData,
		beforeSend: function() {
			spinner.start()
		},
		success:function(response) {
			console.log(response);
			if (response !== 'failed'){
				var data = JSON.parse(response);
				$('.frame-phone #phone-screen').html(data.phoneScreen);
				$('#preview-frame').attr('src', data.previewSection);
				if(data.apikey)
					$('#woomoby_formModal #token_id').val(data.apikey);
			}
			$('.page-navbar .navbar-menu').show();
			$('.page-navbar .form-action').hide();
		},
		complete: function() {
			spinner.stop();
		}
	})

	return false;
});
        // Upload Images
        $('.action-image-upload').click(function() {
        	var media_uploader;
        	var parentIdentifier = $(this).data("identifier");
        	var clickButtonID = $(this).attr("id");
        // If the media frame already exists, reopen it.
        if (media_uploader) {
        	media_uploader.open();
        	return;
        }

// Create a new media frame
media_uploader = wp.media({
	title: 'WooMoby - Upload Images',
	button: {
		text: 'Use this image'
	},
	multiple: false
});
        // When an image is selected
        media_uploader.on('select', function() {
        	var json_data = media_uploader.state().get("selection").first().toJSON();
                // Validation
                $('#' + parentIdentifier + '-error').attr('style', 'display: block;');
                if (parentIdentifier == 'favicon') {
                	if (json_data.subtype != 'png') {
                		$('#' + parentIdentifier + '-error').html('Only PNG format is supported');
                		return;
                	}
                	if (json_data.height != json_data.width) {
                		$('#' + parentIdentifier + '-error').html('The image must be a square, same height and width.');
                		return;
                	}
                }

        // Send the image data for processing
        var spinner = Ladda.create(document.querySelector('#' + clickButtonID));
      
        var formData = "action=cp_images_action&method=upload&input_name=" + encodeURIComponent(parentIdentifier) + "&file_name=" + encodeURIComponent(json_data.filename) + "&file_date=" + encodeURIComponent(json_data.dateFormatted) + "&nonce=" + encodeURIComponent(cp_admin_vars.cp_images_action) + "&file_url=" + encodeURIComponent(json_data.url);
        $.ajax({
        	url : ajaxurl,
        	type: "POST",
        	data : formData,
        	beforeSend: function() {
        		spinner.start();
        	},
        	success:function(response) {
        		console.log(response);
        		$('#' + parentIdentifier + '-preview').fadeIn();
        		$('#' + parentIdentifier + '-preview img').attr('src', json_data.url);
        		$('#' + parentIdentifier + '-error').fadeOut();
        		$('#' + parentIdentifier + '-delete').fadeIn();
        	},
        	complete: function() {
        		spinner.stop();
        	}
        })
    });
        media_uploader.open();
    });
        // Remove uploaded images
        $('.action-image-delete').click(function() {
        	var parentIdentifier = $(this).data("identifier");
        	var spinner = Ladda.create(document.querySelector('#' + $(this).attr("id")));
        	var formData = "action=cp_images_action&method=delete&input_name=" + encodeURIComponent(parentIdentifier) + "&nonce=" + encodeURIComponent(cp_admin_vars.cp_images_action);
        	$.ajax({
        		url : ajaxurl,
        		type: "POST",
        		data : formData,
        		beforeSend: function() {
        			spinner.start();
        		},
        		success:function(response) {
        			$('#' + parentIdentifier + '-preview').fadeOut();
        			$('#' + parentIdentifier + '-delete').fadeOut();
        		},
        		complete: function() {
        			spinner.stop();
        		}
        	})

        	return false;
        });
        // Clear error message on click
        $('#btn-clear-msg').click(function() {
        	var ID = $(this).data("id");
        	messageClear(ID)
        });
        function messageClear(alertID) {
        	$('#' + alertID + '.alert-success').removeClass().hide();
        	$('#' + alertID + '.alert-danger').removeClass().hide();
        }

        function messageDisplay(alertID, alertText, alertResponse) {
        	newClass = 'alert alert-styled-left alert-arrow-left alert-bordered alert-' + ((alertResponse) ? 'success' : 'danger');
        	$('#' + alertID).find('span#msg').html(alertText);
        	$('#' + alertID).addClass(newClass).show(700);
        }
        $('.sendNotifications').click(function() {
        	sendContact();
        });
//         $(function () {
//
//                var uldContainer;
//                $("ul.example").sortable({
//                    group: 'nested',
//                    afterMove: function (placehulder, container) {
//                        if (uldContainer != container) {
//                            if (uldContainer)
//                                uldContainer.el.removeClass("active");
//                            container.el.addClass("active");
//
//                            uldContainer = container;
//                        }
//                    },
//                    onDrop: function ($item, container, _super) {
//                        container.el.removeClass("active");
//                        _super($item, container);
//                    }
//                });
//            });
        $( "#listContainer ul" ).sortable(
{
	connectWith: ".group",
  placeholder: "itemPlaceholder",
  cursor: 'move'
  }
);

$('.group').sortable({
	items: "> div.listItem",
  connectWith: ".group",
  update: function( event, ui ) {

      console.log("ui.item")
        //console.log(ui.item.parent().html())
        var childId = ui.item.data('id');
        p_id = ui.item.parent().data('id');
        console.log("pid",p_id)
        if(p_id===undefined){
            p_id=0;
        }else{
         ui.item.attr('data-parent-id',p_id);
        }
       var parentId =  ui.item.attr('data-parent-id');
       console.log("Child",childId);
       console.log("Parent",parentId);
       $('ul.sortable li').find("input[type='checkbox']:checked").each(function (){
           console.log($(this).parent().data('id')+" "+$(this).parent().attr('data-parent-id'));
       });
       checkbox = $(this).find('.menu_checkbox').first();
       $(this).find('.menu_checkbox').each(function(){
           if($(this).attr('checked')=='checked')
            ($(this).parent().parent().parent().find('.menu_checkbox').first().attr('checked',true))
       })
       var data = $(this).sortable('serialize');
        		console.log(data);
        		$.ajax({
        			data: { action :'woomoby_save_settings',
        			data: data},
        			type: 'POST',
        			url: ajaxurl,
        		});
//    if ($(ui.item).hasClass('groupItem')) {
//      $(ui.sender).sortable("cancel");
//      alert('Sorry! Groups cannot be nested');
//    }
$('.page-navbar .navbar-menu').hide();
$('.page-navbar .form-action').show();
  }
});
//        $("#sortable").sortable({
//        	update:  function(event, ui) {
//        		var data = $(this).sortable('serialize');
//        		console.log(data);
//        		$.ajax({
//        			data: { action :'woomoby_save_settings',
//        			data: data},
//        			type: 'POST',
//        			url: ajaxurl,
//        		});
//        		$('.page-navbar .navbar-menu').hide();
//        		$('.page-navbar .form-action').show();
//        	}
//        });
      $("#sortable").disableSelection();
        function sendContact() {
        	var valid;
        	valid = validateContact();
        	var contactData = {'userName':$("#userName").val(), 'userEmail':$("#userEmail").val(), 'userContent':$("#content").val(),'userToken':$("#token_id").val()};
        	if (valid) {
        		$.ajax({
        			url: ajaxurl,
        			data:{ action :'woomoby_sendEmail', data: contactData},
        			type: "POST",
        			success:function(data){
    					//window.location.href = "https://woomoby.com/";
    					$("#mail-status").html(data.replace('0', ''));
        			}
        		});
        	}
        }
        function validateContact() {
        	var valid = true;
        	$(".demoInputBox").css('background-color', '');
        	$(".info").html('');
        	if (!$("#userName").val()) {
        		$("#userName-info").html("(required)");
        		$("#userName").css('background-color', '#FFFFDF');
        		valid = false;
        	}
        	if (!$("#userEmail").val()) {
        		$("#userEmail-info").html("(required)");
        		$("#userEmail").css('background-color', '#FFFFDF');
        		valid = false;
        	}
        	if (!$("#content").val()) {
        		$("#content-info").html("(required)");
        		$("#content").css('background-color', '#FFFFDF');
        		valid = false;
        	}
        	return valid;
        }

    });